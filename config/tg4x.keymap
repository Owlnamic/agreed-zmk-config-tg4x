/*
 * Copyright (c) 2020 The ZMK Contributors
 * 
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

	&default_transform {
		compatible = "zmk,matrix-transform";
		rows = <8>;
		columns = <7>;

		map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4) RC(4,5)
RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(5,0) RC(5,1) RC(5,2) RC(5,3)         RC(5,4)
RC(2,0)         RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4)
RC(3,0) RC(3,1) RC(3,2) RC(3,4)                                 RC(3,5) RC(7,1) RC(7,2) RC(7,3) RC(7,4)
		>;
	};

/ {

	combos {
	        compatible = "zmk,combos";
	        combo_esc {
	            timeout-ms = <50>;
	            key-positions = <0 1>;
	            bindings = <&kp ESC>;
	        };
	};

	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
&kp TAB      &kp Q    		   &kp W            &kp E            &kp R            &kp T 			&kp Y 	 &kp U     			&kp I     		   &kp O    	  &kp P       &kp DEL    &kp BSPC
&kp LCTRL    &kp A    		   &kp S            &kp D            &kp F            &kp G 			&kp H 	 &kp J     			&kp K     		   &kp L    	  &lt 2 APOS             &kp RET
&kp LSHFT    &kp Z    		   &kp X            &kp C            &kp V            &kp B 			&kp N 	 &kp M     			&kp COMMA 		   &kp DOT  	  &kp SLASH              &kp RSHFT
&kp LCTRL    &kp LGUI 		   &kp LALT         &lt 1 SPACE                             			      	 &kp SPACE 			&mo 2     		   &kp RALT 	  &kp RGUI               &kp RCTRL
			>;
		};

		function_layer {
			bindings = <
&kp GRAVE    &kp N1   		   &kp N2           &kp N3           &kp N4           &kp N5            &kp N6   &kp N7             &kp N8             &kp N9         &kp N0      &kp MINUS  &kp EQUAL
&trans       &trans   		   &trans           &kp HOME         &kp END          &kp RET           &trans   &trans             &kp LBKT           &kp RBKT       &kp SEMI               &trans
&trans       &kp DEL  		   &kp BSPC         &kp PG_UP        &kp PG_DN        &trans            &trans   &trans             &trans             &kp BSLH       &kp FSLH 	             &trans
&trans       &trans   		   &trans           &trans                                                       &trans             &trans             &trans         &trans                 &trans
			>;
		};

		other_layer {
			bindings = <
&trans       &kp F1            &kp F2           &kp F3           &kp F4           &kp F5            &kp F6   &kp F7       	    &kp F8         	   &kp F9         &kp F10     &kp F11    &kp F12
&kp CAPS     &bt BT_SEL 0      &bt BT_SEL 01    &bt BT_SEL 02    &bt BT_SEL 03    &bt BT_SEL 04     &trans   &ext_power EP_OFF  &ext_power EP_ON   &trans         &trans                 &trans
&trans       &bt BT_CLR        &bt BT_PRV       &bt BT_NXT       &trans           &trans            &trans   &kp C_MUTE  	    &kp C_VOL_DN   	   &kp C_VOL_UP   &trans                 &trans
&bootloader  &rgb_ug RGB_TOG   &trans           &trans                                              &trans   &trans      	    &kp C_PREV    	   &kp C_PP                              &kp C_NEXT
			>;
		};

		other_layer2 {
			bindings = <
&trans       &rgb_ug RGB_TOG   &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFR   &trans   &trans             &kp UP             &trans         &trans      &trans     &trans
&trans       &trans            &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFF   &trans   &kp LEFT           &kp DOWN           &kp RIGHT      &trans                 &trans
&trans       &trans            &trans           &trans           &trans           &trans            &trans   &trans             &trans             &trans         &trans                 &trans
&trans       &trans            &trans           &trans                                              &trans   &trans             &trans             &trans                                &trans
			>;
		};

	};
};
